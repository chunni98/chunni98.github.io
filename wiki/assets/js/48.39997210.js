(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{325:function(t,s,a){"use strict";a.r(s);var _=a(14),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-单片机简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-单片机简介"}},[t._v("#")]),t._v(" 1 单片机简介")]),t._v(" "),a("h3",{attrs:{id:"单片机是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单片机是什么"}},[t._v("#")]),t._v(" 单片机是什么")]),t._v(" "),a("p",[a("strong",[t._v("1. 单片机与电脑对比")])]),t._v(" "),a("p",[t._v("Single-Chip Microcomputer，单片微型计算机，是一种集成电路芯片。")]),t._v(" "),a("p",[t._v("电脑与单片机 STM32F1 对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("对比项")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("电脑")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("单片机")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CPU 主频")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("x86，2~5Ghz")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("51/arm/risc-v, 72MHz@STM32F1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("内存")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("GB级，40G/s")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("kb级 约300Mb/s")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("硬盘容量")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("TB级 500Mb/s @SATA3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("kb级 约 100Mb/s")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("功耗")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数百 w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("< 0.5W")])])])]),t._v(" "),a("p",[t._v("64 位电脑，每次访问 8 位，64 / 8 = 8（字节）, 访存速度 8 * 5 = 40 Gb/s。")]),t._v(" "),a("p",[a("strong",[t._v("2. 单片机特点")])]),t._v(" "),a("ol",[a("li",[t._v("体积小")]),t._v(" "),a("li",[t._v("功耗低")]),t._v(" "),a("li",[t._v("集成度高")]),t._v(" "),a("li",[t._v("使用方便")]),t._v(" "),a("li",[t._v("扩展灵活")])]),t._v(" "),a("p",[a("strong",[t._v("3. 单片机作用")])]),t._v(" "),a("ol",[a("li",[t._v("仪器仪表")]),t._v(" "),a("li",[t._v("家用电器")]),t._v(" "),a("li",[t._v("工业控制")]),t._v(" "),a("li",[t._v("汽车电子")])]),t._v(" "),a("p",[a("strong",[t._v("4. 单片机发展历程")])]),t._v(" "),a("p",[t._v("SCM 单片微型计算机 -> MCU 微控制器 -> SoC 嵌入式片上系统。")]),t._v(" "),a("p",[a("strong",[t._v("5. 单片机发展趋势")])]),t._v(" "),a("p",[t._v("CPU：主频高，64位，双 CPU，流水线")]),t._v(" "),a("p",[t._v("存储器：Mb 级，片内 ROM FLash 化，程序加密化")]),t._v(" "),a("p",[t._v("IO：提高并行口驱动能力，增加 I/O功能")]),t._v(" "),a("p",[t._v("外围电路内置化：高集成度，DMA/DA等集成到片内。")]),t._v(" "),a("p",[a("strong",[t._v("6. CISC VS RISC")])]),t._v(" "),a("p",[t._v("复杂指令集便于编程和提高存储器访问效率，如 8051，x86架构。")]),t._v(" "),a("ol",[a("li",[t._v("指令多，模式多，格式可变。")]),t._v(" "),a("li",[t._v("指令执行需要的时钟周期差距大。")]),t._v(" "),a("li",[t._v("无流水线或者流水程度低。")]),t._v(" "),a("li",[t._v("指令由微代码翻译执行。")])]),t._v(" "),a("p",[t._v("精简指令集能提高处理器运行速度，如 ARM/MIPS/RISC-V。")]),t._v(" "),a("ol",[a("li",[t._v("指令少，模式少，格式固定。")]),t._v(" "),a("li",[t._v("大多数指令只需要一个时钟周期。")]),t._v(" "),a("li",[t._v("流水线结构。")]),t._v(" "),a("li",[t._v("指令直接由硬件执行。")])]),t._v(" "),a("p",[a("strong",[t._v("7. 冯诺依曼结构和哈佛结构")])]),t._v(" "),a("p",[t._v("冯诺依曼结构：")]),t._v(" "),a("p",[t._v("冯·诺依曼结构（von Neumann architecture）又称作普林斯顿体系结构（Princetion architecture）。冯·诺依曼结构的处理器使用同一个存储器，经由同一个总线传输。")]),t._v(" "),a("p",[t._v("是一种"),a("strong",[t._v("将程序指令存储器和数据存储器合并在一起")]),t._v("的计算机设计概念结构。")]),t._v(" "),a("p",[t._v("指令和数据统一编址，使用同一条总线传输。")]),t._v(" "),a("ol",[a("li",[t._v("必须有一个存储器。")]),t._v(" "),a("li",[t._v("必须有一个控制器。")]),t._v(" "),a("li",[t._v("必须有一个运算器，用于完成算术运算和逻辑运算。")]),t._v(" "),a("li",[t._v("必须有输入和输出设备，用于进行人机通信。")])]),t._v(" "),a("p",[t._v("哈佛结构：")]),t._v(" "),a("p",[t._v("中央处理器首先到程序指令储存器中读取程序指令内容，解码后得到数据地址，再到相应的数据储存器中读取数据，并进行下一步的操作（通常是执行）。程序指令储存和数据储存分开，数据和指令的储存可以同时进行，"),a("strong",[t._v("可以使指令和数据有不同的数据宽度")]),t._v("。")]),t._v(" "),a("p",[t._v("哈佛结构的微处理器通常具有较高的执行效率。其程序指令和数据指令分开组织和储存的，"),a("strong",[t._v("执行时可以预先读取下一条指令")]),t._v("。")]),t._v(" "),a("p",[t._v("利弊：")]),t._v(" "),a("p",[t._v("冯诺依曼结构主要用于通用计算机领域，需要对存储器中的代码和数据频繁的进行修改，统一编址有利于节约资源。")]),t._v(" "),a("p",[t._v("哈佛结构主要用于嵌入式计算机，程序固化在硬件中，有较高的可靠性、运算速度和较大的吞吐量。")]),t._v(" "),a("h2",{attrs:{id:"_2-cortex-m-系列介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cortex-m-系列介绍"}},[t._v("#")]),t._v(" 2 Cortex-M 系列介绍")]),t._v(" "),a("h3",{attrs:{id:"_2-1-arm-公司"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-arm-公司"}},[t._v("#")]),t._v(" 2.1 ARM 公司")]),t._v(" "),a("p",[t._v("只做内核设计与 IP 授权，不参与芯片设计。")]),t._v(" "),a("ol",[a("li",[t._v("低功耗、低成本、高性能。")]),t._v(" "),a("li",[t._v("支持 16 位/32 位双指令集。")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-coterx-内核分类及特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-coterx-内核分类及特征"}},[t._v("#")]),t._v(" 2.2 Coterx 内核分类及特征")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("对比项")]),t._v(" "),a("th",[t._v("Cortex-A")]),t._v(" "),a("th",[t._v("Cortex-R")]),t._v(" "),a("th",[t._v("Cortex-M")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("特点")]),t._v(" "),a("td",[t._v("高时钟频率，长流水线、高性能")]),t._v(" "),a("td",[t._v("较高时钟频率，较长流水线 实时性强")]),t._v(" "),a("td",[t._v("始终频率低，流水线短，超级功耗")])]),t._v(" "),a("tr",[a("td",[t._v("应用场景")]),t._v(" "),a("td",[t._v("移动计算、智能手机、平板电脑、数字电视")]),t._v(" "),a("td",[t._v("军工、汽车电子、无线基带")]),t._v(" "),a("td",[t._v("工控、传感器、消费电子、家用电器、医疗器械")])])])]),t._v(" "),a("p",[t._v("Cortex-M3/4/7 介绍")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/1.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_3-stm32-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-stm32-是什么"}},[t._v("#")]),t._v(" 3 STM32 是什么")]),t._v(" "),a("p",[t._v("ST：意法半导体")]),t._v(" "),a("p",[t._v("M：MCU/MPU")]),t._v(" "),a("p",[t._v("32：32位")]),t._v(" "),a("h3",{attrs:{id:"_3-1-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-系列"}},[t._v("#")]),t._v(" 3.1 系列")]),t._v(" "),a("p",[t._v("共五大类：MPU/高性能 MCU/主流 MCU/超低功耗 MCU/无线系列 MCU")]),t._v(" "),a("p",[t._v("选型手册。")]),t._v(" "),a("h2",{attrs:{id:"_4-数据手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据手册"}},[t._v("#")]),t._v(" 4 数据手册")]),t._v(" "),a("p",[a("strong",[t._v("获取方式")])]),t._v(" "),a("ol",[a("li",[t._v("ST 官网")]),t._v(" "),a("li",[t._v("stcu 中文社区")])]),t._v(" "),a("h3",{attrs:{id:"_4-1-查看数据手册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-查看数据手册"}},[t._v("#")]),t._v(" 4.1 查看数据手册")]),t._v(" "),a("p",[t._v("目录：")]),t._v(" "),a("ol",[a("li",[t._v("介绍")]),t._v(" "),a("li",[t._v("规格说明")]),t._v(" "),a("li",[t._v("引脚定义")]),t._v(" "),a("li",[t._v("存储器映像")]),t._v(" "),a("li",[t._v("电气特性")]),t._v(" "),a("li",[t._v("封装特性")]),t._v(" "),a("li",[t._v("订货代码")]),t._v(" "),a("li",[t._v("版本历史")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/3.png",alt:""}})]),t._v(" "),a("p",[t._v("stm32f103rct6，是通用增强型，64 位引脚，48kb RAM,256k 闪存存储器， LQFP 封装，工作在 -40 摄氏度 至 85 摄氏度的芯片。\n数据手册内容概要：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/4.png",alt:""}})]),t._v(" "),a("p",[t._v("查询数据手册可知：")]),t._v(" "),a("p",[a("strong",[t._v("SRAM")]),t._v(": 高速缓存。")]),t._v(" "),a("p",[t._v("stm32f103rct6 的基本参数为：")]),t._v(" "),a("ol",[a("li",[t._v("主频/FLASH/SRAM：72MHz/256Kb/48kb")]),t._v(" "),a("li",[t._v("工作电压/最大电流：2.0~3.6V/150mA")]),t._v(" "),a("li",[t._v("I/O 引脚接入电压范围：COMS 端口：-0.3V ~ 3.6V，兼容 5V 端口：-0.3V ~ 5.5V")]),t._v(" "),a("li",[t._v("单个 I/O 引脚最大电流：25mA")])]),t._v(" "),a("p",[t._v("flash起始地址为0x8000000，大小为0x4000(16进制)—>262144字节(10进制)—>256KB")]),t._v(" "),a("p",[t._v("RAM起始地址为0x2000000，大小为0xC000(16进制)—>49125字节(10进制)—>48KB")]),t._v(" "),a("p",[a("strong",[t._v("引脚定义")])]),t._v(" "),a("p",[t._v("引脚类型：（LQFP64 为例）")]),t._v(" "),a("ol",[a("li",[t._v("电源引脚，如 VSSA，VBAT，VDD 等以 V 开头的。")]),t._v(" "),a("li",[t._v("晶振引脚，如 PC14-OSC32_IN,PD1 OSC_OUT 等带 IN/OUT 的引脚。")]),t._v(" "),a("li",[t._v("复位引脚，如 NRST")]),t._v(" "),a("li",[t._v("下载引脚\n"),a("ol",[a("li",[t._v("JTAG，可以下载、仿真、调试，占用 5 个 I/O。")]),t._v(" "),a("li",[t._v("SWD，下载、仿真、调试，占用 2 个 I/O ，建议使用。（SWDIO/SWCLK/GND/VCC/RESET(可选)）")]),t._v(" "),a("li",[t._v("串口，下载，占用两个引脚。")])])]),t._v(" "),a("li",[t._v("BOOT 引脚（BOOT0/PB2(BOOT1)）")]),t._v(" "),a("li",[t._v("GPIO 引脚（P 开头的引脚）")])]),t._v(" "),a("h2",{attrs:{id:"_5-最小系统和-i-o-分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-最小系统和-i-o-分配"}},[t._v("#")]),t._v(" 5 最小系统和 I/O 分配")]),t._v(" "),a("p",[t._v("保证 MCU 正常工作的最小电路组成单元。")]),t._v(" "),a("ul",[a("li",[t._v("主控芯片")]),t._v(" "),a("li",[t._v("电源电路")]),t._v(" "),a("li",[t._v("晶振电路")]),t._v(" "),a("li",[t._v("下载调试电路")]),t._v(" "),a("li",[t._v("BOOT 启动电路")]),t._v(" "),a("li",[t._v("复位电路")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/5.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_5-1-复位电路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-复位电路"}},[t._v("#")]),t._v(" 5.1 复位电路")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/6.png",alt:""}})]),t._v(" "),a("p",[t._v("STM32 复位引脚 NRST 保持低电平状态实践 1~4.5ms 即可复位。")]),t._v(" "),a("ol",[a("li",[t._v("上电复位")]),t._v(" "),a("li",[t._v("复位按键复位")])]),t._v(" "),a("p",[t._v("上电的瞬间，电容充电，NRST 是低电平，电容充满电后，NRST 变为高电平。")]),t._v(" "),a("p",[t._v("控制电容大小，控制电容充满电的时间满足复位要求。")]),t._v(" "),a("h3",{attrs:{id:"_5-2-启动电路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-启动电路"}},[t._v("#")]),t._v(" 5.2 启动电路")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/7.png",alt:""}})]),t._v(" "),a("p",[t._v("ISP Mode（2、3）")]),t._v(" "),a("p",[t._v("Run Mode（1、2）")]),t._v(" "),a("h3",{attrs:{id:"_5-3-晶振电路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-晶振电路"}},[t._v("#")]),t._v(" 5.3 晶振电路")]),t._v(" "),a("p",[t._v("如果使用内部RC振荡器而不使用外部晶振，请按照下面方法处理：")]),t._v(" "),a("ol",[a("li",[t._v("对于100脚或144脚的产品，OSC_IN 应接地，OSC_OUT 应悬空。")]),t._v(" "),a("li",[t._v("对于少于100脚的产品，有2种接法：\n"),a("ol",[a("li",[t._v("OSC_IN和OSC_OUT分别通过10K电阻接地。此方法可提高EMC性能。")]),t._v(" "),a("li",[t._v("分别重映射OSC_IN和OSC_OUT至PD0和PD1，再配置PD0和PD1为推挽输出并输出'0'。此方法可以减小功耗并(相对上面2.1)节省2个外部电阻。")])])])]),t._v(" "),a("p",[t._v("外部低速晶振（32.768KHz）")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/8.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/9.png",alt:""}})]),t._v(" "),a("p",[t._v("外部高速晶振（8MHz）")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/10.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_5-4-下载调试电路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-下载调试电路"}},[t._v("#")]),t._v(" 5.4 下载调试电路")]),t._v(" "),a("p",[t._v("SWD：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/11.png",alt:""}})]),t._v(" "),a("p",[t._v("USB-0DG:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/12.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_5-5-i-o-分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-i-o-分配"}},[t._v("#")]),t._v(" 5.5 I/O 分配")]),t._v(" "),a("p",[t._v("优先分配特定外设 I/O，然后分配通用 I/O，最后微调。")]),t._v(" "),a("h2",{attrs:{id:"_6-搭建开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-搭建开发环境"}},[t._v("#")]),t._v(" 6 搭建开发环境")]),t._v(" "),a("h3",{attrs:{id:"_6-1-常用开发工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-常用开发工具"}},[t._v("#")]),t._v(" 6.1 常用开发工具")]),t._v(" "),a("p",[t._v("开发环境：MDK，仿真器：ST-LINK/J-LINK/DAP，串口调试助手：sscom/putty")]),t._v(" "),a("h3",{attrs:{id:"_6-2-mdk-安装和-器件支持包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-mdk-安装和-器件支持包"}},[t._v("#")]),t._v(" 6.2 MDK 安装和 器件支持包")]),t._v(" "),a("p",[t._v("均可在 arm keil 官网直接下载。")]),t._v(" "),a("p",[t._v("想要在国内如何快速下载 keil 的 pack 文件包，可以先在 keil 的 pack 官网查找自己想要的 pack，\n然后添加到 http://keilpack.azureedge.net/pack/ 末尾，如：\n"),a("code",[t._v("http://keilpack.azureedge.net/pack/ARM.V2M_MPS3_SSE_300_BSP.1.1.0.pack")])]),t._v(" "),a("p",[t._v("注意：安装路径不要有中文，路径越短越好。")]),t._v(" "),a("p",[t._v("KEIL5 默认使用 armclang6 编译器，最好使用 HAL 库。")]),t._v(" "),a("h3",{attrs:{id:"_6-3-安装仿真器驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-安装仿真器驱动"}},[t._v("#")]),t._v(" 6.3 安装仿真器驱动")]),t._v(" "),a("p",[t._v("DAP 仿真器不需要驱动。")]),t._v(" "),a("p",[t._v("ST-LINK 需要安装驱动。")]),t._v(" "),a("h3",{attrs:{id:"_6-4-安装-ch340-usb-虚拟串口驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-安装-ch340-usb-虚拟串口驱动"}},[t._v("#")]),t._v(" 6.4 安装 CH340 USB 虚拟串口驱动")]),t._v(" "),a("p",[t._v("CH340作为一种电平转换芯片，用于TTL电平标准转USB电平标准，最终实现USB转串口（一般用于电脑和设备之间的通信）")]),t._v(" "),a("p",[t._v("CH340驱动就是USB转串口的驱动的一种，芯片是CH340的均可以使用。安装CH340驱动之后，板子连接串口就可以正常发挥其功能了。")]),t._v(" "),a("p",[a("strong",[t._v("USB虚拟串口作用")])]),t._v(" "),a("ol",[a("li",[t._v("USB口当串口使用。")]),t._v(" "),a("li",[t._v("USB连接串口 1，USB 还能当作串口来下载程序。")]),t._v(" "),a("li",[t._v("当 USB 供电口。")])]),t._v(" "),a("p",[t._v("查询数据手册，串口1为 PA9，PA10")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/13.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_7-mdk-编译例程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-mdk-编译例程"}},[t._v("#")]),t._v(" 7 MDK 编译例程")]),t._v(" "),a("p",[t._v("部分编译：只编译更新过的代码。")]),t._v(" "),a("p",[t._v("全局编译：全部编译。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/14.png",alt:""}})]),t._v(" "),a("p",[t._v("FLASH 大小：code + RO-Data + RW-data")]),t._v(" "),a("p",[t._v("SRAM 大小：RW -data + ZI-data")]),t._v(" "),a("p",[t._v("还可以看 "),a("code",[t._v(".map")]),t._v(" 文件查看。")]),t._v(" "),a("p",[t._v("下载到开发板执行的文件是 "),a("code",[t._v(".hex")]),t._v(" 文件。")]),t._v(" "),a("p",[t._v("编译后双击项目名查看 "),a("code",[t._v(".map")]),t._v(" 文件，最后可以查看 FLASH 和 ROM 大小。")]),t._v(" "),a("h3",{attrs:{id:"_7-1-串口下载程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-串口下载程序"}},[t._v("#")]),t._v(" 7.1 串口下载程序")]),t._v(" "),a("p",[t._v("M3 和 M4 开发板支持串口下载程序，M7 不支持串口下载。")]),t._v(" "),a("p",[t._v("STM32 的 ISP 下载，常用串口1 下载程序。")]),t._v(" "),a("p",[t._v("使用 usb 虚拟串口，需 CH340 USB 虚拟串口驱动。")]),t._v(" "),a("p",[a("strong",[t._v("ISP 方式")])]),t._v(" "),a("p",[t._v("ISP（在系统编程）是通过ST在芯片生产线上写入内嵌的自举程序到芯片系统存储器中，启动时从系统存储器中运行这个自举程序，它通过USART1串口来将我们的程序写入闪存存储器中。\n注意下载时要将开发板上的boot开关打到ISP模式，ISP模式下载完成后可以立即执行程序。而如果要单独启动程序，则必须将boot开关打到RUN运行模式。")]),t._v(" "),a("p",[t._v("ISP下载需要借助第三方工具，如mcuisp.exe或FlyMcu.exe。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/15.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/16.png",alt:""}})]),t._v(" "),a("p",[t._v("F4 系列波特率最大：76800，F1 系列最大波特率：460800。")]),t._v(" "),a("h3",{attrs:{id:"_7-2-stm32-启动模式-m3-m4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-stm32-启动模式-m3-m4"}},[t._v("#")]),t._v(" 7.2 STM32 启动模式（M3/M4）")]),t._v(" "),a("p",[t._v("stm32f103rct6。")]),t._v(" "),a("p",[t._v("查询参考手册 2.4 小结，可得知 stm32f10xxx 的启动配置：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/17.png",alt:""}})]),t._v(" "),a("p",[t._v("根据选定的启动模式，主闪存存储器、系统存储器或SRAM可以按照以下方式访问：")]),t._v(" "),a("ul",[a("li",[t._v("从主闪存存储器启动：主闪存存储器被映射到启动空间(0x0000 0000)，但仍然能够在它原有的地址(0x0800 0000)访问它，即闪存存储器的内容可以在两个地址区域访问，0x00000000或0x0800 0000。用于存储用户程序。")]),t._v(" "),a("li",[t._v("从系统存储器启动：系统存储器被映射到启动空间(0x0000 0000)，但仍然能够在它原有的地址(0x1FFF F000)访问它。存储有预烧录的启动程序。")]),t._v(" "),a("li",[t._v("从内置SRAM启动：只能在0x2000 0000开始的地址区访问SRAM，掉电消失，不能永久存储。")])]),t._v(" "),a("p",[t._v("ISP 下载即选择系统存储器启动。")]),t._v(" "),a("p",[t._v("内嵌的自举程序用于通过USART1串行接口对闪存存储器进行重新编程。这个程序位于系统存\n储器中，由ST在生产线上写入。")]),t._v(" "),a("p",[a("strong",[t._v("ISP 下载程序步骤")])]),t._v(" "),a("ol",[a("li",[t._v("BOOT0 接高电平，BOOT1 接低电平")]),t._v(" "),a("li",[t._v("按复位键")])]),t._v(" "),a("p",[t._v("程序下载到 主闪存存储器中。(0x08000000 - 0x0807FFFF)")]),t._v(" "),a("p",[a("strong",[t._v("程序执行一般步骤")])]),t._v(" "),a("ol",[a("li",[t._v("BOOT0 接低电平，BOOT1 任意")]),t._v(" "),a("li",[t._v("按复位键")])]),t._v(" "),a("p",[a("strong",[t._v("ST-LINK/J-LINK 下载程序")])]),t._v(" "),a("p",[t._v("使用 st-link 可以进行程序的调试。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/18.png",alt:""}})]),t._v(" "),a("p",[t._v("keil 里设置 debug 选择 ST-LINK Debugger。")]),t._v(" "),a("p",[t._v("点击工具栏 load 即可将程序下载到 mcu 中。")]),t._v(" "),a("p",[a("strong",[t._v("使用 ST-LINK 调试程序")])]),t._v(" "),a("p",[t._v("Debug 设置，use ST-LINK debugger，然后点击 settings，Debug 页面里，ort 选择为 SW，Flash Download 里勾选上 reset and run。")]),t._v(" "),a("p",[t._v("Flash Download 页面配置下载算法，根据芯片 flash 大小配置，大于 512kb 手动配置。")]),t._v(" "),a("p",[a("strong",[t._v("keil 仿真")])]),t._v(" "),a("p",[t._v("debug 选择 use simulator，并勾选 Run to main()")]),t._v(" "),a("p",[t._v("首先查看芯片数据库")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/21.png",alt:""}})]),t._v(" "),a("p",[t._v("将对应内容填写到下面：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/22.png",alt:""}})]),t._v(" "),a("p",[t._v("编译成功后设置断点后就可以进行仿真了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/20.png",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("Register：寄存器窗口，一般用于查看程序运行时间。")]),t._v(" "),a("li",[t._v("Disassembly：反汇编窗口，将 C 语言代码和汇编对比显示。")]),t._v(" "),a("li",[t._v("代码窗口，黄色的三角形表示将要执行的代码，绿色的三角形表示当前光标所在代码。")]),t._v(" "),a("li",[t._v("Call Stack + Locals：调用关系&局部变量窗口，通过该窗口可以查看函数调用关系，以及函数的局部变量。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/23.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("复位：其功能等同于硬件上按复位按钮。相当于实现了一次硬复位。按下该按钮之后，代码会重新从头开始执行。")]),t._v(" "),a("li",[t._v("执行到断点处：该按钮用来快速执行到断点处，有时候你并不需要观看每步是怎么执行的，而是想快速的执行到程序的某个地方看结果，这个按钮就可以实现这样的功能，前提是你在查看的地方设置了断点。")]),t._v(" "),a("li",[t._v("停止运行：此按钮在程序一直执行的时候会变为有效，通过按该按钮，就可以使程序停止下来，进入到单步调试状态。")]),t._v(" "),a("li",[t._v("执行进去：该按钮用来实现执行到某个函数里面去的功能，在没有函数的情况下，是等同于执行过去按钮的。")]),t._v(" "),a("li",[t._v("执行过去：在碰到有函数的地方，通过该按钮就可以单步执行过这个函数，而不进入这个函数单步执行。")]),t._v(" "),a("li",[t._v("执行出去：该按钮是在进入了函数单步调试的时候，有时候可能不必再执行该函数的剩余部分了，通过该按钮就可以一步执行完该函数的余部分，并跳出函数，回到函数被调用的位置。")]),t._v(" "),a("li",[t._v("执行到光标处：该按钮可以迅速的使程序运行到光标处，其实是挺像执行到断点处按钮功能，但是两者是有区别的，断点可以有多个，但是光标所在处只有一个。")]),t._v(" "),a("li",[t._v("反汇编窗口：通过该按钮，就可以查看汇编代码，这对分析程序很有用。")]),t._v(" "),a("li",[t._v("Call STACK 窗口：通过该按钮，显示调用关系&局部变量窗口，显示当前函数的调用关系和局部变量，方便查看，对分析程序非常有用。")]),t._v(" "),a("li",[t._v("观察窗口：MDK5 提供 2 个观察窗口（下拉选择），该按钮按下，会弹出一个显示变量的窗口，输入你所想要观察的变量/表达式，即可查看其值，是很常用的一个调试窗口。")]),t._v(" "),a("li",[t._v("内存查看窗口：MDK5 提供 4 个内存查看窗口（下拉选择），该按钮按下，会弹出一个内存查看窗口，可以在里面输入你要查看的内存地址，然后观察这一片内存的变化情况。是很常用的一个调试窗口")]),t._v(" "),a("li",[t._v("串口打印窗口：MDK5 提供 4 个串口打印窗口（下拉选择），该按钮按下，会弹出一个类似串口调试助手界面的窗口，用来显示从串口打印出来的内容。")]),t._v(" "),a("li",[t._v("系统分析窗口：该图标下面有 6 个选项（下拉选择），我们一般用第一个，也就是逻辑分析窗口(Logic Analyzer)，点击即可调出该窗口，通过 SETUP 按钮新建一些 IO 口，就可以观察这些 IO 口的电平变化情况，以多种形式显示出来，比较直观。")]),t._v(" "),a("li",[t._v("系统查看窗口：该按钮可以提供各种外设寄存器的查看窗口（通过下拉选择），选择对应外设，即可调出该外设的相关寄存器表，并显示这些寄存器的值，方便查看设置的是否正确。")])]),t._v(" "),a("p",[a("strong",[t._v("逻辑分析窗口使用")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/24.png",alt:""}})]),t._v(" "),a("p",[t._v("Set添加变量，变量类型（4）有 analysis/bit/status 等，如果是数字量，就选择 bit。")]),t._v(" "),a("p",[t._v("添加要查看的引脚，例如 "),a("code",[t._v("GPIOA_Pin_3")]),t._v(" 引脚，则输入 PORTA.3 或者 PORTA>>3")]),t._v(" "),a("p",[t._v("DARMSTM.DLL -pSTM32F103RC")]),t._v(" "),a("p",[t._v("zoom 可以调整 in 和 out 来调节 Grid。")]),t._v(" "),a("h2",{attrs:{id:"_8-jtag-swd-调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-jtag-swd-调试"}},[t._v("#")]),t._v(" 8 JTAG/SWD 调试")]),t._v(" "),a("h3",{attrs:{id:"_8-1-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-原理"}},[t._v("#")]),t._v(" 8.1 原理")]),t._v(" "),a("p",[t._v("Cortex-M 内核含有硬件调试模块，该模块可在取指（指令断点）出或访问数据（数据断点）时停止。\n内核停止时，可以查询内核的内部状态和系统的外部状态。完成查询后，可恢复程序执行。")]),t._v(" "),a("h3",{attrs:{id:"_8-2-查看函数段-函数执行时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-查看函数段-函数执行时间"}},[t._v("#")]),t._v(" 8.2 查看函数段/函数执行时间")]),t._v(" "),a("p",[t._v("设置：魔术棒-> Utilities->settings->Trace->Core Clock 更改为适当的频率。")]),t._v(" "),a("p",[t._v("如 stm32f103rct6 就设置为 72 Mhz")]),t._v(" "),a("h3",{attrs:{id:"_8-3-call-stack-窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-call-stack-窗口"}},[t._v("#")]),t._v(" 8.3 call stack 窗口")]),t._v(" "),a("p",[t._v("可以查看函数调用栈。")]),t._v(" "),a("h3",{attrs:{id:"_8-4-寄存器窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-寄存器窗口"}},[t._v("#")]),t._v(" 8.4 寄存器窗口")]),t._v(" "),a("p",[t._v("可以查看寄存器的相关信息。")]),t._v(" "),a("h3",{attrs:{id:"_8-5-watch-window"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-watch-window"}},[t._v("#")]),t._v(" 8.5 watch window")]),t._v(" "),a("p",[t._v("查看函数首地址和变量值。")]),t._v(" "),a("p",[t._v("可以设置全局变量在被读或者被写后自动停止运行。")]),t._v(" "),a("h3",{attrs:{id:"_8-6-memroy-窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-memroy-窗口"}},[t._v("#")]),t._v(" 8.6 Memroy 窗口")]),t._v(" "),a("p",[t._v("查看内存的值，在里面输入你要查看的内存地址，然后观察这一片内存的变化情况。")]),t._v(" "),a("p",[t._v("注意：内存的值是小端模式。")]),t._v(" "),a("h3",{attrs:{id:"_8-7-系统查看窗口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-系统查看窗口"}},[t._v("#")]),t._v(" 8.7 系统查看窗口")]),t._v(" "),a("p",[t._v("该按钮可以提供各种外设寄存器的查看窗口（通过下拉选择），选择对应外设，即可调出该外设的相关寄存器表，并显示这些寄存器的值，方便查看设置的是否正确。")]),t._v(" "),a("h3",{attrs:{id:"_8-8-仿真时要注意的点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-仿真时要注意的点"}},[t._v("#")]),t._v(" 8.8 仿真时要注意的点")]),t._v(" "),a("p",[t._v("仿真时，要注意优化等级选择为 0。")]),t._v(" "),a("p",[t._v("调试停止在断点处时，只是内核停止，外设会继续运行。")]),t._v(" "),a("p",[t._v("断点设置不要打断通信。")]),t._v(" "),a("h2",{attrs:{id:"_9-keil-设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-keil-设置"}},[t._v("#")]),t._v(" 9 keil 设置")]),t._v(" "),a("h3",{attrs:{id:"_9-1-编辑器设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-编辑器设置"}},[t._v("#")]),t._v(" 9.1 编辑器设置")]),t._v(" "),a("ol",[a("li",[t._v("使用 utf-8 编码。")]),t._v(" "),a("li",[t._v("显示空格。")]),t._v(" "),a("li",[t._v("C/C++ 文件用空格替换 tab，一个 tab 换成 4 个 空格。")]),t._v(" "),a("li",[t._v("ASM 文件用空格替换 tab，一个 tab 换成 4 个 空格。")]),t._v(" "),a("li",[t._v("其他文件用空格替换 tab，一个 tab 换成 4 个 空格。")]),t._v(" "),a("li",[t._v("更改注释颜色")]),t._v(" "),a("li",[t._v("编辑器字体，c/asm 设置为：size：14，Fira Code Retina字体。")])]),t._v(" "),a("h3",{attrs:{id:"_9-2-代码补全-于法检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-代码补全-于法检测"}},[t._v("#")]),t._v(" 9.2 代码补全&于法检测")]),t._v(" "),a("ol",[a("li",[t._v("回车键/tab 选中补全选项。")])]),t._v(" "),a("h3",{attrs:{id:"_9-3-global-prop-文件保存设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-global-prop-文件保存设置"}},[t._v("#")]),t._v(" 9.3 global.prop 文件保存设置")]),t._v(" "),a("p",[t._v("MDK 安装目录下 global.prop 文件。")]),t._v(" "),a("h3",{attrs:{id:"_9-4-编译选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-编译选项"}},[t._v("#")]),t._v(" 9.4 编译选项")]),t._v(" "),a("ol",[a("li",[t._v("优化等级 O0")]),t._v(" "),a("li",[t._v("C 语言标准 C99。")])]),t._v(" "),a("h2",{attrs:{id:"_10-c-语言基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-c-语言基础"}},[t._v("#")]),t._v(" 10 C 语言基础")]),t._v(" "),a("h3",{attrs:{id:"_10-1-位操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-位操作"}},[t._v("#")]),t._v(" 10.1 位操作")]),t._v(" "),a("p",[a("strong",[t._v("1. 在不改变其他位的情况下，对某几个位进行设值")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("GPIOA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFBF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将第 bit6 清零。")]),t._v("\nGPIOA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0X00000040")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 bit6 的值为 1，不改变其他位的值 */")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("2. 移位操作提高代码的可读性")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("SysTick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CTRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSysTick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CTRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0X0002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("第一种操作比第二种操作可读性更好。")]),t._v(" "),a("p",[a("strong",[t._v("3. 按位取反操作")])]),t._v(" "),a("p",[t._v("按位取反在设置寄存器的时候经常被使用，常用于清除某一个/某几个位。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅设置 CTRL 寄存器的第 0 位（最低位）为 0，其他位的值保持不变。")]),t._v("\nSysTick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CTRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 关闭 SYSTICK */")]),t._v("\nSysTick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("CTRL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0XFFFFFFFE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 关闭 SYSTICK */")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("可读性/可维护性都大大提升。")]),t._v(" "),a("p",[a("strong",[t._v("4. ^ 按位异或")])]),t._v(" "),a("p",[t._v("该功能非常适合用于控制某个位翻转")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("GPIOB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ODR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("5. 移位")])]),t._v(" "),a("p",[t._v("左移补 0，右移正数 补 0，负数补 1。")]),t._v(" "),a("h3",{attrs:{id:"_10-2-extern-外部申明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-extern-外部申明"}},[t._v("#")]),t._v(" 10.2 extern 外部申明")]),t._v(" "),a("p",[t._v("extern 可以置于变量或者函数前，以表示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。")]),t._v(" "),a("h3",{attrs:{id:"_10-3-stdint-h"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-stdint-h"}},[t._v("#")]),t._v(" 10.3 stdint.h")]),t._v(" "),a("p",[t._v("C99 标准引进的标准 C 库的文件")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stddef.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<inttypes.h>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"_11-stm32-基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-stm32-基础知识"}},[t._v("#")]),t._v(" 11 stm32 基础知识")]),t._v(" "),a("h3",{attrs:{id:"_11-1-寄存器基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-寄存器基础知识"}},[t._v("#")]),t._v(" 11.1 寄存器基础知识")]),t._v(" "),a("p",[t._v("寄存器（Register）是单片机内部一种特殊的内存，它可以实现对单片机各个功能的控制，\n简单的来说可以把寄存器当成一些控制机构，控制包括内核及外设的各种状态。")]),t._v(" "),a("p",[t._v("寄存器是CPU内部用来存放数据的一些小型存储区域，用来暂时存放参与运算的数据和运算结果。")]),t._v(" "),a("p",[t._v("寄存器是CPU内部的元件，包括通用寄存器、专用寄存器和控制寄存器。寄存器拥有非常高的读写速度，所以在寄存器之间的数据传送非常快。")]),t._v(" "),a("p",[t._v("stm32 寄存器是 32 位的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/25.png",alt:""}})]),t._v(" "),a("p",[t._v("内核寄存器，我们一般只需要关心中断控制寄存器和 SysTick 寄存器即可，其他三大类，我们一般很少直接接触。")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  GPIOB 的 ODR 寄存器为例，其寄存器地址为：0X40010C0C，所以我们对其赋值可以写成：")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x40010C0C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全部 0XFFFF，表示 GPIOB 所有 IO 口（16 个 IO 口）都输出高电平。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以结构体访问方式：")]),t._v("\nGPIOB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ODR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0XFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"_11-2-stm32-系统架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-stm32-系统架构"}},[t._v("#")]),t._v(" 11.2 stm32 系统架构")]),t._v(" "),a("p",[a("strong",[t._v("1. Coterx M 内核 & 芯片")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/26.png",alt:""}})]),t._v(" "),a("p",[t._v("ARM公司提供CM3内核和调试系统，其他的东西（外设（IIC、SPI、UART、\nTIM等）、存储器（SRAM、FLASH等）、I/O等）由芯片制造商设计开发。这里ST公司就是\nSTM32F103芯片的制造商。")]),t._v(" "),a("p",[a("strong",[t._v("2. F1 系统架构")])]),t._v(" "),a("p",[t._v("详细模块框架图见数据手册 第 2 节。")]),t._v(" "),a("p",[t._v("简略框架图见参考手册 2.1 节。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/27.png",alt:""}})]),t._v(" "),a("p",[t._v("1 是主动单元，2 是被动单元。")]),t._v(" "),a("p",[t._v("主系统由以下部分组成：")]),t._v(" "),a("p",[t._v("四个驱动单元：")]),t._v(" "),a("ul",[a("li",[t._v("M3 内核 DCode 总线（D-bus）")]),t._v(" "),a("li",[t._v("和 system 总线（S-bus）")]),t._v(" "),a("li",[t._v("通用 DMA1")]),t._v(" "),a("li",[t._v("DMA2")])]),t._v(" "),a("p",[t._v("DMA，即直接存储器访问，DMA传输将数据从一个地址空间复制到另一个地址空间，提供在外设和存储器之间或者存储器和存储器之间的高速数据传输。")]),t._v(" "),a("p",[t._v("互联型有五个主动单元，增加了网口。")]),t._v(" "),a("p",[t._v("四个被动单元：")]),t._v(" "),a("ul",[a("li",[t._v("内部 SRAM")]),t._v(" "),a("li",[t._v("内部闪存存储器")]),t._v(" "),a("li",[t._v("FSMC")]),t._v(" "),a("li",[t._v("AHB到APB的桥，连接所有APB设备。")])]),t._v(" "),a("p",[t._v("主动单元可以主动发起通信指令。")]),t._v(" "),a("p",[t._v("总线时钟频率")]),t._v(" "),a("p",[t._v("内核最高频率：72MHz")]),t._v(" "),a("p",[t._v("AHB：72Mhz，APB1：36MHz，APB2:72MHz")]),t._v(" "),a("p",[t._v("SDIO（用于 SD 卡的 I/O）和 复位/时钟控制（RCC） 连接到 AHB 上。")]),t._v(" "),a("h3",{attrs:{id:"_11-3-存储器映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-存储器映射"}},[t._v("#")]),t._v(" 11.3 存储器映射")]),t._v(" "),a("p",[t._v("参考手册 2.2 节：")]),t._v(" "),a("p",[t._v("程序存储器、数据存储器、寄存器和输入输出端口被组织在同一个4GB的线性地址空间内。数据字节以小端格式存放在存储器中。可访问的存储器空间被分成8个主要块，每个块为512MB。")]),t._v(" "),a("p",[a("strong",[t._v("stm32 寻址范围")])]),t._v(" "),a("ol",[a("li",[t._v("32根地址线，每根地址线有两个状态：导通和不导通。")]),t._v(" "),a("li",[t._v("单片机内存地址访问的存储单元是按字节编址而不是 bit。")])]),t._v(" "),a("p",[t._v("数据总线宽度是编址单位。如果数据总线宽度是 32，则按 4 字节编址。")]),t._v(" "),a("p",[t._v("数据总线宽度是 16，则按 2 字节编址。")]),t._v(" "),a("p",[t._v("处理器能处理的字长（数据总线宽度）越大，运算能力越强。")]),t._v(" "),a("p",[t._v("如 64 位电脑，字长是 64位，则一次能处理 8 字节，即数据总线宽度（64位）。")]),t._v(" "),a("p",[t._v("地址总线 32 位，内存最多大为 2"),a("sup",[t._v("32")]),t._v(" 即 4Gb。")]),t._v(" "),a("p",[t._v("寻址范围：4G 字节。即 2"),a("sup",[t._v("32")])]),t._v(" "),a("p",[a("code",[t._v("0x0000 ~ 0xFFFFFFFF")])]),t._v(" "),a("p",[t._v("如 19 根地址线，16根数据线的存储器芯片，")]),t._v(" "),a("p",[t._v("寻址空间是：512kb，内存大小是 1Mb。")]),t._v(" "),a("p",[a("strong",[t._v("存储器功能划分")])]),t._v(" "),a("p",[t._v("STB 将 4GB 的内存空间分为八块：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/28.png",alt:""}})]),t._v(" "),a("p",[t._v("Block0:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/29.png",alt:""}})]),t._v(" "),a("p",[t._v("Block1:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/30.png",alt:""}})]),t._v(" "),a("p",[t._v("Block2:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/31.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("存储器映射")])]),t._v(" "),a("p",[t._v("存储器可以存储数据的设备，本身没有地址信息，对存储器分配地址的过程称为存储器映射。")]),t._v(" "),a("p",[t._v("数据手册中的存储器映像图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/wiki/stm32%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_11-4-寄存器映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-寄存器映射"}},[t._v("#")]),t._v(" 11.4 寄存器映射")]),t._v(" "),a("p",[t._v("寄存器是特殊的存储器，给寄存器地址命名的过程就是寄存器映射。")]),t._v(" "),a("p",[t._v("如 "),a("code",[t._v("0x4001080C")]),t._v(" 映射为 "),a("code",[t._v("GPIOA_ODR")]),t._v("。")]),t._v(" "),a("p",[t._v("根据参考手册2.3 存储器映像，可查看外设和外设挂在的总线。")]),t._v(" "),a("p",[t._v("根据参考手册 8.2.4 端口输出数据寄存器的偏移地址是 0CH，而查询 参考手册 2.3 GPIOA 的起始地址是：\n"),a("code",[t._v("0x40010800")]),t._v(" 所以 "),a("code",[t._v("GPIOA_ODR")]),t._v("的地址就是 "),a("code",[t._v("0x4001080C")]),t._v("。")]),t._v(" "),a("p",[t._v("复位值：寄存器复位后的值：0x00000000。高 16 位未用，低 16 位有效。")]),t._v(" "),a("p",[t._v("寄存器映射后操作：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("GPIOA_ODR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4001080c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\nGPIOA_ODR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("寄存器地址计算")])]),t._v(" "),a("ol",[a("li",[t._v("总线基地址（BUS_BASE_ADDR）")]),t._v(" "),a("li",[t._v("外设基于总线及地址的偏移量（PERIPH_OFFSET）")]),t._v(" "),a("li",[t._v("寄存器相对于外设基地址的偏移量（REG_OFFSET）")])]),t._v(" "),a("p",[t._v("寄存器地址 = BUS_BASE_ADDR + PERIPH_OFFSET + REG_OFFSET")]),t._v(" "),a("p",[t._v("查询参口手册 2.3 存储器映像")]),t._v(" "),a("p",[t._v("总线基地址：")]),t._v(" "),a("ul",[a("li",[t._v("APB1：0x4000 0000 ，偏移量 0")]),t._v(" "),a("li",[t._v("APB2：0x4001 0000，偏移量 0x1 0000")]),t._v(" "),a("li",[t._v("AHB： 0x4001 8000，偏移量 0x1 8000")])]),t._v(" "),a("p",[t._v("APB1 基地址，也叫做外设基地址。(PERIPH_BASE)")]),t._v(" "),a("p",[t._v("偏移量是相对于外设基地址来说的。")]),t._v(" "),a("p",[t._v("GPIO 外设基地址及偏移量：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/31-5.png",alt:""}})]),t._v(" "),a("p",[t._v("GPIOB 寄存器相对外设基地址的偏移量：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/wiki/stm32/32.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("结构体映射寄存器")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" CRL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" CRH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" IDR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" ODR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" BSRR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" BRR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   __IO "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" CKR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("GPIO_TypeDef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("GPIOA_BASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0800")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("GPIOA")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA_TypeDef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("GPIOA_BASE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\nGPIOA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ODR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("定义在 "),a("code",[t._v("stm32f103xe.h")]),t._v(" 中，725 行开始。")]),t._v(" "),a("h2",{attrs:{id:"_12-新建寄存器版本-mdk-工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-新建寄存器版本-mdk-工程"}},[t._v("#")]),t._v(" 12 新建寄存器版本 MDK 工程")]),t._v(" "),a("h3",{attrs:{id:"_12-1-准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-准备工作"}},[t._v("#")]),t._v(" 12.1 准备工作")]),t._v(" "),a("p",[t._v("官网下载 stm32Cubef1 固件包。")]),t._v(" "),a("p",[t._v("下载 Patch_CubeF1 1.8.3")]),t._v(" "),a("h3",{attrs:{id:"_12-2-新建工程步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-新建工程步骤"}},[t._v("#")]),t._v(" 12.2 新建工程步骤")]),t._v(" "),a("p",[a("strong",[t._v("新建工程文件夹")])]),t._v(" "),a("p",[t._v("目录下新建")]),t._v(" "),a("ul",[a("li",[t._v("Drivers 硬件相关的驱动层文件\n"),a("ul",[a("li",[t._v("BSP  存放开发板板级支持包驱动代码，各种外设驱动")]),t._v(" "),a("li",[t._v("CMSIS 存放 CMSIS 底层代码，如启动文件 (.s文件)")]),t._v(" "),a("li",[t._v("SYSTEM 核心驱动代码，如 sys.c，delay.c 和 usart.c 等。")])])]),t._v(" "),a("li",[t._v("Middlewares 中间层组件文件和第三方中间层文件")]),t._v(" "),a("li",[t._v("Output 工程编译输出文件,.hex/.bin/.o 文件等")]),t._v(" "),a("li",[t._v("Projects MDK 工程文件")]),t._v(" "),a("li",[t._v("User HAL 库用户配置文件、main.c 文件、中断处理文件、分散加载文件")])]),t._v(" "),a("p",[t._v("5 个目录。")]),t._v(" "),a("p",[a("strong",[t._v("新建工程框架")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("新建工程")])]),t._v(" "),a("li",[a("p",[t._v("保存工程")])]),t._v(" "),a("li",[a("p",[t._v("选择主控型号")])])]),t._v(" "),a("p",[t._v("选择 stm32f103rc")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("删除文件夹")])]),t._v(" "),a("p",[t._v("删除 Listings 文件夹（用于存放编译过程产生的链接列表文件）和 Objects文件夹（用于存放编译过程产生的调试信息、hex、预览、lib文件等）。")]),t._v(" "),a("p",[t._v("DebugConfig 文件夹用于存放调试设置信息文件，不可删除。")]),t._v(" "),a("h3",{attrs:{id:"_12-3-添加文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-添加文件"}},[t._v("#")]),t._v(" 12.3 添加文件")]),t._v(" "),a("p",[a("strong",[t._v("1. 添加工程名：Templates")])]),t._v(" "),a("p",[a("strong",[t._v("2. 新建分组：Startup、User、Drivers/System、Docs")])]),t._v(" "),a("p",[a("strong",[t._v("3. 添加文件")])]),t._v(" "),a("p",[t._v("3.1. 添加 "),a("code",[t._v("startup_stm32f103xe.s")]),t._v(" 到 Startup。256kb <= flash <= 512 kb")]),t._v(" "),a("p",[t._v("3.2. 修改启动文件:")]),t._v(" "),a("div",{staticClass:"language-asm line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Heap_Size EQU 0x00000200\n;未用到编译器自带的内存管理（malloc,free等），设置 Heap_Szie 为 0\nHeap_Size EQU 0x00000000\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("3.3. 修改函数：")]),t._v(" "),a("div",{staticClass:"language-asm line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Reset_Handler   PROC\n                EXPORT Reset_Handler [WEAK]\n                IMPORT __main\n                ;寄存器版本代码，没有用到 SystemInit 函数，注释以下代码防止报错。\n                ;HAL 库版本代码建议加上，以初始化 stm32 时钟等。\n                ;IMPORT SystemInit\n                ;LDR R0, =SystemInit\n                ;BLX R0\n                LDR R0, =__main\n                BX R0\n                ENDP\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[a("strong",[t._v("4. 魔术棒设置")])]),t._v(" "),a("p",[t._v("4.1. Target 选项卡")]),t._v(" "),a("p",[t._v("设置使用的编译器版本、外部晶振频率")]),t._v(" "),a("p",[t._v("Keil 5.35 版本后不能修改 Xtal，默认 12Mhz。")]),t._v(" "),a("p",[t._v("编译器选择 armcc V5.06（自行安装）")]),t._v(" "),a("p",[t._v("4.2. Output 选项卡")]),t._v(" "),a("p",[t._v("设置 Objects 输出文件夹、生成 hex文件、输出浏览信息")]),t._v(" "),a("p",[t._v("Output 文件夹定位到 ../Output")]),t._v(" "),a("p",[t._v("勾选生成 hex 文件。")]),t._v(" "),a("p",[t._v("4.3. Listing 选项卡")]),t._v(" "),a("p",[t._v("设置 Listing 输出文件夹 为 ../Output")]),t._v(" "),a("p",[t._v("4.4. C/C++ 选项卡")]),t._v(" "),a("p",[t._v("设置全局宏定义、优化等级、C99 Mode、头文件包含路径")]),t._v(" "),a("p",[t._v("添加宏定义："),a("code",[t._v("STM32F103xE")])]),t._v(" "),a("p",[t._v("优化等级选择 0")]),t._v(" "),a("p",[t._v("如果编译器选择 armclang6，推荐优化等级 1")]),t._v(" "),a("p",[t._v("勾选 C99 mode")]),t._v(" "),a("p",[t._v("设置头文件包含路径。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("..\\Drivers\\CMSIS\\Device\\ST\\STM32F1xx\\Include\n..\\Drivers\\CMSIS\\Include\n..\\Drivers\n..\\User\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("推荐在编写代码时包含路径时基于头文件指定包含路径")]),t._v(" "),a("p",[t._v("设置路径 + 相对路径")]),t._v(" "),a("p",[t._v("即表示当前头文件包含路径所指示的 4 个文件夹里面，肯定有某一个文件夹包含了：\n"),a("code",[t._v("SYSTEM/sys/sys.h")]),t._v(" 的路径，实际上就是在 Drivers 文件夹下面。")]),t._v(" "),a("p",[t._v("两者结合起来就是：")]),t._v(" "),a("p",[a("code",[t._v('#include "../../Drivers/SYSTEM/sys/sys.h"')])]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SYSTEM/sys/sys.h"')])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("4.5. Debug 选项卡")]),t._v(" "),a("p",[t._v("设置使用的仿真器类型、选择下载接口")]),t._v(" "),a("p",[t._v("4.6. Utilities 选项卡")]),t._v(" "),a("p",[t._v("设置下载功能、下载算法、下载算法起始地址和大小等（部分芯片需要修改）")]),t._v(" "),a("p",[t._v("4.7. Linker 选项卡")]),t._v(" "),a("p",[t._v("添加分散加载文件（要用到 外部 flash）")]),t._v(" "),a("p",[t._v("4.8. Utilities")]),t._v(" "),a("p",[t._v("点击 --Use Debug Driver-- Settings")]),t._v(" "),a("p",[t._v("勾上 "),a("code",[t._v("reset and run")])]),t._v(" "),a("p",[a("strong",[t._v("5 新建 main.c 编写代码并添加进组 User")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SYSTEM/sys/sys.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SYSTEM/usart/usart.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./SYSTEM/delay/delay.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sys_stm32_clock_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usart_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("115200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t:%d\\r\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay_ms")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])])])}),[],!1,null,null,null);s.default=v.exports}}]);