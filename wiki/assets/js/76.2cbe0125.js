(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{361:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"makefile-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makefile-介绍"}},[a._v("#")]),a._v(" Makefile 介绍")]),a._v(" "),s("h3",{attrs:{id:"makefile-的规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makefile-的规则"}},[a._v("#")]),a._v(" Makefile 的规则")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("<target>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <prerequisites>\n[tab]  <commands>\n    ...\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[s("code",[a._v("target")]),a._v(" 目标，可以是执行文件，也可以是一个标签。")]),a._v(" "),s("li",[s("code",[a._v("prerequisites")]),a._v(" 生成 "),s("code",[a._v("target")]),a._v(" 所依赖的文件或 "),s("code",[a._v("target")]),a._v("。")]),a._v(" "),s("li",[s("code",[a._v("command")]),a._v(" 该 "),s("code",[a._v("target")]),a._v(" 要执行的命令。")])]),a._v(" "),s("p",[s("strong",[a._v("prerequisites中如果有一个以上的文件比target文件要新的话，command所定义的命令就会被执行。")])]),a._v(" "),s("h3",{attrs:{id:"makefile-里有什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makefile-里有什么"}},[a._v("#")]),a._v(" Makefile 里有什么？")]),a._v(" "),s("p",[a._v("Makefile 里主要包含了五个东西：显式规则、隐晦规则、变量定义、文件指示和注释。")]),a._v(" "),s("ol",[s("li",[a._v("显式规则。显式规则说明了如何生成一个或多个目标文件。这是由 Makefile 的书写者明显指出要\n生成的文件、文件的依赖文件和生成的命令。")]),a._v(" "),s("li",[a._v("隐晦规则。由于我们的 make 有自动推导的功能，所以隐晦的规则可以让我们比较简略地书写 Makefile，这是由 make 所支持的。")]),a._v(" "),s("li",[a._v("变量的定义。在 Makefile 中我们要定义一系列的变量，变量一般都是字符串，这个有点像你 C 语\n言中的宏，当 Makefile 被执行时，其中的变量都会被扩展到相应的引用位置上。")]),a._v(" "),s("li",[a._v("文件指示。其包括了三个部分，一个是在一个 Makefile 中引用另一个 Makefile，就像 C 语言中的\ninclude 一样；另一个是指根据某些情况指定 Makefile 中的有效部分，就像 C 语言中的预编译 #if\n一样；还有就是定义一个多行的命令。有关这一部分的内容，我会在后续的部分中讲述。")]),a._v(" "),s("li",[a._v("注释。Makefile 中只有行注释，和 UNIX 的 Shell 脚本一样，其注释是用 # 字符，这个就像 C/C++\n中的 // 一样。如果你要在你的 Makefile 中使用 # 字符，可以用反斜杠进行转义，如："),s("code",[a._v("\\#")]),a._v(" 。\n最后，还值得一提的是，在 Makefile 中的命令，必须要以 Tab 键开始。")])]),a._v(" "),s("h3",{attrs:{id:"引用其他-makefile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用其他-makefile"}},[a._v("#")]),a._v(" 引用其他 Makefile")]),a._v(" "),s("p",[s("code",[a._v("include <filename>")])]),a._v(" "),s("p",[a._v("filename 可以是当前操作系统 Shell 的文件模式（可以包含路径和通配符）。")]),a._v(" "),s("p",[a._v("make 命令开始时，会找寻 include 所指出的其它 Makefile，并把其内容安置在当前的位置。")]),a._v(" "),s("p",[s("code",[a._v("-I")]),a._v(" 选项指定查找目录。")]),a._v(" "),s("h3",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[a._v("#")]),a._v(" 环境变量")]),a._v(" "),s("p",[a._v("如果你的当前环境中定义了环境变量 MAKEFILES ，那么，make 会把这个变量中的值做一个类似于\ninclude 的动作。")]),a._v(" "),s("p",[a._v("建议不要使用。")]),a._v(" "),s("h3",{attrs:{id:"make-的工作方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-的工作方式"}},[a._v("#")]),a._v(" Make 的工作方式")]),a._v(" "),s("p",[a._v("GNU 的 make 工作时的执行步骤如下：")]),a._v(" "),s("ol",[s("li",[a._v("读入所有的 Makefile。")]),a._v(" "),s("li",[a._v("读入被 include 的其它 Makefile。")]),a._v(" "),s("li",[a._v("初始化文件中的变量。")]),a._v(" "),s("li",[a._v("推导隐晦规则，并分析所有规则。")]),a._v(" "),s("li",[a._v("为所有的目标文件创建依赖关系链。")]),a._v(" "),s("li",[a._v("根据依赖关系，决定哪些目标要重新生成。")]),a._v(" "),s("li",[a._v("执行生成命令。")])]),a._v(" "),s("h2",{attrs:{id:"书写规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#书写规则"}},[a._v("#")]),a._v(" 书写规则")]),a._v(" "),s("p",[a._v("规则包含两个部分，一个是依赖关系，一个是生成目标的方法。")]),a._v(" "),s("p",[a._v("一般来说，定义在 Makefile中的第一条规则中的目标将被确立为最终的目标。")]),a._v(" "),s("h3",{attrs:{id:"规则语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规则语法"}},[a._v("#")]),a._v(" 规则语法")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("<target>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <prerequisites>\n[tab]  <commands>\n    ...\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[s("code",[a._v("target")]),a._v(" 目标，可以是执行文件，也可以是一个标签。")]),a._v(" "),s("li",[s("code",[a._v("prerequisites")]),a._v(" 生成 "),s("code",[a._v("target")]),a._v(" 所依赖的文件或 "),s("code",[a._v("target")]),a._v("。")]),a._v(" "),s("li",[s("code",[a._v("command")]),a._v(" 该 "),s("code",[a._v("target")]),a._v(" 要执行的命令。")])]),a._v(" "),s("p",[a._v("如果命令太长，你可以使用反斜杠（\\ ）作为换行符。")]),a._v(" "),s("h3",{attrs:{id:"通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[a._v("#")]),a._v(" 通配符")]),a._v(" "),s("p",[a._v("make 支持三个通配符："),s("code",[a._v("*")]),a._v(" ，"),s("code",[a._v("?")]),a._v(" 和 "),s("code",[a._v("~")]),a._v(" 。")]),a._v(" "),s("p",[s("code",[a._v("~")]),a._v(" 表示用户的 "),s("code",[a._v("$HOME")]),a._v(" 目录。")]),a._v(" "),s("p",[a._v("如果要将通配符用于变量中，需要这样写：")]),a._v(" "),s("p",[s("code",[a._v("objects := $(wildcast *.o)")])]),a._v(" "),s("p",[a._v("列出一确定文件夹中的所有 "),s("code",[a._v(".c")]),a._v(" 文件：")]),a._v(" "),s("p",[s("code",[a._v("objects := $(wildcard *.c)")])]),a._v(" "),s("p",[a._v("列出文件对应的 "),s("code",[a._v(".o")]),a._v(" 文件：")]),a._v(" "),s("p",[s("code",[a._v("$(patsubst %.c %.o, $(wildcard, *.c))")])]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("objects "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("patsubst")]),a._v(" %.c,%.o, "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" *.c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    cc -o foo "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"文件搜寻"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件搜寻"}},[a._v("#")]),a._v(" 文件搜寻")]),a._v(" "),s("p",[a._v("当 make 需要去找寻文件的依赖关系时，你可以在文件前加上路径，但最好的方法是把一个路径告诉 make，让 make 在自动去找。")]),a._v(" "),s("p",[a._v("Makefile 文件中的特殊变量 VPATH 就是完成这个功能的，如果没有指明这个变量，make 只会在当前的目录中去找寻依赖文件和目标文件。")]),a._v(" "),s("p",[s("code",[a._v("VPATH = src:../headers")])]),a._v(" "),s("p",[a._v("上面的定义指定两个目录，“src”和“../headers”，make 会按照这个顺序进行搜索。目录由“冒号”分隔。")]),a._v(" "),s("p",[s("strong",[a._v("vpath 关键字")])]),a._v(" "),s("p",[s("code",[a._v("vpath <pattern> <directories>")])]),a._v(" "),s("p",[a._v("为符合模式"),s("code",[a._v("<pattern>")]),a._v(" 的文件指定搜索目录 "),s("code",[a._v("<directories>")]),a._v("。")]),a._v(" "),s("p",[s("code",[a._v("vpath <pattern>")])]),a._v(" "),s("p",[a._v("清除符合模式"),s("code",[a._v("<pattern>")]),a._v(" 的文件的搜索目录。")]),a._v(" "),s("p",[s("code",[a._v("vpath")]),a._v(" 清除所有设置好的文件搜索目录。")]),a._v(" "),s("p",[a._v("vpath 使用方法中的 "),s("code",[a._v("<pattern>")]),a._v(" 需要包含 % 字符。% 的意思是匹配零或若干字符")]),a._v(" "),s("p",[s("code",[a._v("vpath %.h ../headers")])]),a._v(" "),s("p",[a._v("该语句表示，要求 make 在“../headers”目录下搜索所有以 .h 结尾的文件。")]),a._v(" "),s("h3",{attrs:{id:"伪目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪目标"}},[a._v("#")]),a._v(" 伪目标")]),a._v(" "),s("p",[a._v("“伪目标”并不是一个文件，只是一个标签，需要显式指明才能让其生效。为了避免和文件重名，需要使用特殊标记：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" clean\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    rm  -f *.o temp\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("可以利用伪目标一次性生成多个目标：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" all\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("all")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" prog1 prog2 prog3\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("prog1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" prog1.o utils.o\n    cc -o prog1 prog1.o utils.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("prog2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" prog2.o\n    cc -o prog2 prog2.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("prog3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" prog3.o sort.o utils.o\n    cc -o prog3 prog3.o sort.o utils.o\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("伪目标也可以是依赖：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" cleanall cleanobj cleandiff\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("cleanall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" cleanobj cleandiff\n    rm program\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("cleanobj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    rm *.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("cleandiff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    rm *.diff\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"多目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多目标"}},[a._v("#")]),a._v(" 多目标")]),a._v(" "),s("p",[a._v("Makefile 的规则中的目标可以不止一个，其支持多目标，有可能我们的多个目标同时依赖于一个文件，并且其生成的命令大体类似。于是我们就能把其合并起来。")]),a._v(" "),s("div",{staticClass:"language-Makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("bigoutput littleoutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" text.g\n    generate text.g -"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("subst")]),a._v(" output,,"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" > "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("等价于：")]),a._v(" "),s("div",{staticClass:"language-Makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("bigoutoutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" text.g\n    generate text.g -big > bigoutput\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("littleoutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" text.g\n    generate text.g -little > littleoutput\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"静态模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态模式"}},[a._v("#")]),a._v(" 静态模式")]),a._v(" "),s("p",[a._v("静态目标可以更容易地定义多目标的规则。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("<targets ...>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <target-pattern> "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <prereq-patterns ...>\n    <commands>\n    ...\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("targets 定义了一系列的目标文件，可以有通配符。是目标的一个集合。")]),a._v(" "),s("p",[a._v("target-pattern 是指明了 targets 的模式，也就是的目标集模式。")]),a._v(" "),s("p",[a._v("prereq-patterns 是目标的依赖模式，它对 target-pattern 形成的模式再进行一次依赖目标的定义。")]),a._v(" "),s("p",[a._v("例子：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("CC "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" gcc\nCFLAGS "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" -Wall -Werror -g -O0\n\nOBJS "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" foo.o bar.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("OBJS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(OBJS)")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.o "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.c\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CFLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[s("code",[a._v("%.o")]),a._v(" 指明我们的目标从 "),s("code",[a._v("OBJS")]),a._v(" 中获取所有以 "),s("code",[a._v(".o")]),a._v(" 结尾的目标，"),s("code",[a._v("%.c")]),a._v(" 则取 "),s("code",[a._v("%")]),a._v(" 匹配的内容，加上 "),s("code",[a._v(".c")]),a._v(" 的后缀。")]),a._v(" "),s("p",[a._v("依赖目标就变为 "),s("code",[a._v("foo.c bar.c")])]),a._v(" "),s("p",[a._v("上面例子等价于")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("CC "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" gcc\nCFLAGS "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" -Wall -Werror -g -O0\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("foo.o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" foo.c\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("FLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("bar.o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" bar.c\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("FLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("例子二：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("files "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" foo.elc bar.o lose.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(filter %.o, "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(files))")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.o "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.c\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CFLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(filter %.o, "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(files))")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.o "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.c\n    emacs -f batch-byte-compile "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[s("code",[a._v("$(filter %.o $(files))")]),a._v(" 表明调用 makefile 的 "),s("code",[a._v("filter")]),a._v(" 函数，过滤 "),s("code",[a._v("$(files)")]),a._v(" 集。只要其中模式为 "),s("code",[a._v("%.o")]),a._v(" 的内容。")]),a._v(" "),s("h3",{attrs:{id:"自动生成依赖性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动生成依赖性"}},[a._v("#")]),a._v(" 自动生成依赖性")]),a._v(" "),s("p",[a._v("太复杂，跳过，以后用到再学。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.c\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("@")]),a._v("set -e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" rm -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@;")]),a._v(" \\\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -M "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CPPFLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" > "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$;")]),a._v(" \\\n    sed "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g'")]),a._v(" < "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$")]),a._v(" > "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@;")]),a._v(" \\\n    rm -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("这个规则的意思是，所有的 "),s("code",[a._v(".d")]),a._v(" 文件依赖于 "),s("code",[a._v(".c")]),a._v(" 文件，"),s("code",[a._v("rm -f $@")]),a._v(" 的意思是删除所有的目标，也就是\n"),s("code",[a._v(".d")]),a._v(" 文件，第二行的意思是，为每个依赖文件 "),s("code",[a._v("$<")]),a._v(" ，也就是 "),s("code",[a._v(".c")]),a._v(" 文件生成依赖文件，"),s("code",[a._v("$@")]),a._v(" 表示模式 "),s("code",[a._v("%.d")]),a._v(" 文件，\n如果有一个 C 文件是 name.c，那么 % 就是 name ，$$$$ 意为一个随机编号，第二行生成的文件有可能\n是“name.d.12345”，第三行使用 sed 命令做了一个替换")]),a._v(" "),s("p",[a._v("这个模式要做的事就是在编译器生成的依赖关系中加入 .d 文件的依赖，即把依赖关系")]),a._v(" "),s("p",[s("code",[a._v("main.o : main.c defs.h")])]),a._v(" "),s("p",[a._v("转成")]),a._v(" "),s("p",[s("code",[a._v("main.o main.d : main.c defs.h")])]),a._v(" "),s("h2",{attrs:{id:"书写命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#书写命令"}},[a._v("#")]),a._v(" 书写命令")]),a._v(" "),s("p",[s("code",[a._v("@")]),a._v(" 屏蔽回显。")]),a._v(" "),s("p",[s("code",[a._v("-n")]),a._v(" 参数，只打印，不执行。")]),a._v(" "),s("p",[s("code",[a._v("-s")]),a._v(" silent 只执行不打印。")]),a._v(" "),s("h3",{attrs:{id:"命令执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令执行"}},[a._v("#")]),a._v(" 命令执行")]),a._v(" "),s("p",[a._v("如果需要上一条的命令应用在下一条命令时，写在同一行，并用 "),s("code",[a._v(";")]),a._v(" 分隔。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    cd /home/hchen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" pwd\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"命令出错"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令出错"}},[a._v("#")]),a._v(" 命令出错")]),a._v(" "),s("p",[a._v("命令执行完后，make 会检测每个命令的返回码。")]),a._v(" "),s("p",[a._v("为了忽略命令的出错，可在命令行前加上一个 "),s("code",[a._v("-")]),a._v(" 号。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    -rm -f *.o\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"嵌套执行-make"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套执行-make"}},[a._v("#")]),a._v(" 嵌套执行 Make")]),a._v(" "),s("p",[a._v("举例：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("subsystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MAKE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -C subdir\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("表示进入 "),s("code",[a._v("subdir")]),a._v(" 目录，执行 "),s("code",[a._v("make")]),a._v(" 命令。")]),a._v(" "),s("p",[a._v("传递变量给下级的 "),s("code",[a._v("Makefile")]),a._v("。")]),a._v(" "),s("p",[s("code",[a._v("export <variable ...>")])]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("variable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" variable\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("传递所有变量，只要一个 "),s("code",[a._v("export")]),a._v(" 就行。")]),a._v(" "),s("p",[a._v("有两个变量，一个是 SHELL ，一个是 MAKEFLAGS ，这两个变量不管你是否 export，其总是要传递到下层 Makefile 中")]),a._v(" "),s("p",[a._v("如果我们在执行 "),s("code",[a._v("make")]),a._v(" 时，有参数，那么 "),s("code",[a._v("MAKEFLAGS")]),a._v(" 变量会将这些参数传递到下层 Makefile，这是系统级的环境变量。")]),a._v(" "),s("p",[a._v("但是 make 命令中的有几个参数并不往下传递，它们是 -C , -f , -h, -o 和 -W")]),a._v(" "),s("p",[a._v("如果不想往下传参数，可以这样写：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("subsystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    cd substr && "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MAKE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" MAKEFLAGS"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"定义命令包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义命令包"}},[a._v("#")]),a._v(" 定义命令包")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("define")]),a._v(" run-yacc\nyacc "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("firstword")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nmv y.tab.c "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("endef")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("foo.c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" foo.y\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("run-yacc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h2",{attrs:{id:"使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[a._v("#")]),a._v(" 使用变量")]),a._v(" "),s("p",[a._v("类似于 C 中的宏。")]),a._v(" "),s("p",[a._v("自定义变量建议不要全大写，首字母大写，避免和系统变量冲突。")]),a._v(" "),s("h3",{attrs:{id:"变量基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量基础"}},[a._v("#")]),a._v(" 变量基础")]),a._v(" "),s("p",[a._v("使用变量需要用 "),s("code",[a._v("$()")]),a._v(" 包裹。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("Objects "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" program.o foo.o utils.o\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("program")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Objests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    cc -o program "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(Objects)")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" defs.h\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("prog.o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" prog."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" prog."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"变量中的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量中的变量"}},[a._v("#")]),a._v(" 变量中的变量")]),a._v(" "),s("p",[a._v("延时变量表示：使用该变量的时候，才展开该变量，并确定该变量的值")]),a._v(" "),s("p",[a._v("立即变量表示：定义的时候就已经确定了该变量的值")]),a._v(" "),s("p",[s("code",[a._v("=")]),a._v(" 递归赋值。")]),a._v(" "),s("p",[s("code",[a._v(":=")]),a._v(" 赋值。")]),a._v(" "),s("p",[a._v("碰到变量需要展开，如果是"),s("code",[a._v("=")]),a._v("，则先往后面查找，如果是"),s("code",[a._v(":=")]),a._v("，则先往前面查找")]),a._v(" "),s("p",[s("code",[a._v("?=")]),a._v(" 如果没有被赋值才赋值")]),a._v(" "),s("h3",{attrs:{id:"变量的高级用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的高级用法"}},[a._v("#")]),a._v(" 变量的高级用法")]),a._v(" "),s("p",[s("strong",[a._v("变量值的替换")])]),a._v(" "),s("p",[s("code",[a._v("$(var:a=b)")]),a._v(" 把变量 \"var\" 中所有以 'a' 字符串结尾的 'a' 替换为 'b' 。")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" a.o b.o c.o\nbar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(".o"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(".c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("把变量的值当作变量：")]),a._v(" "),s("p",[s("code",[a._v("$($(x))")])]),a._v(" "),s("p",[a._v("静态模式替换：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" a.o b.o c.o\nbar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.o"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("%.c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"追加变量值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#追加变量值"}},[a._v("#")]),a._v(" 追加变量值")]),a._v(" "),s("p",[s("code",[a._v("+=")]),a._v(" 以"),s("code",[a._v(":=")]),a._v(" 作为赋值符。")]),a._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),s("p",[a._v("函数调用：")]),a._v(" "),s("p",[s("code",[a._v("$(<function> <arguments>)")]),a._v(" 参与用逗号分隔。")]),a._v(" "),s("h3",{attrs:{id:"字符串处理函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串处理函数"}},[a._v("#")]),a._v(" 字符串处理函数")]),a._v(" "),s("p",[s("strong",[a._v("subst")])]),a._v(" "),s("p",[s("code",[a._v("$(sbust <from>,<to>,<text>)")])]),a._v(" "),s("p",[s("code",[a._v("$(subst ee,EE,feet on the street)")])]),a._v(" "),s("p",[s("strong",[a._v("patsubst")])]),a._v(" "),s("p",[s("code",[a._v("$(patsubst <pattern>,<replacement>,<text>)")])]),a._v(" "),s("p",[s("code",[a._v("$(patsubst %.c,%.o,x.c bar.c )")])]),a._v(" "),s("h3",{attrs:{id:"文件名操作函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件名操作函数"}},[a._v("#")]),a._v(" 文件名操作函数")]),a._v(" "),s("p",[s("strong",[a._v("dir")])]),a._v(" "),s("p",[s("code",[a._v("$(dir <names...>)")])]),a._v(" "),s("p",[s("code",[a._v("$(dir src/foo.c hacks)")]),a._v(" 返回值是 "),s("code",[a._v("src/ ./")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("notdir")])]),a._v(" "),s("p",[s("code",[a._v("$(not dir src/foo.c hacks)")]),a._v(" 返回值是 "),s("code",[a._v("foo.c hacks")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("wildcard")])]),a._v(" "),s("p",[s("code",[a._v("$(patsubst %.c,%.o,$(wildcard *.c))")]),a._v("，首先使用“wildcard”函数获取工作目录下的.c文件列表；之后将列表中所有文件名的后缀.c替换为.o。")]),a._v(" "),s("h2",{attrs:{id:"make-的运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-的运行"}},[a._v("#")]),a._v(" Make 的运行")]),a._v(" "),s("p",[s("code",[a._v("-f")]),a._v(" 指定 make。")]),a._v(" "),s("h3",{attrs:{id:"常见伪目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见伪目标"}},[a._v("#")]),a._v(" 常见伪目标：")]),a._v(" "),s("ul",[s("li",[a._v("all：所有目标。")]),a._v(" "),s("li",[a._v("clean：清理。")]),a._v(" "),s("li",[a._v("install；安装编译好的程序，其实就是把目标执行文件拷贝到指定的目标中去。")]),a._v(" "),s("li",[a._v("print：列出所有改变过的源文件。")]),a._v(" "),s("li",[a._v("tar：把源代码打包备份成一个 tar 文件。")]),a._v(" "),s("li",[a._v("dist：创建一个压缩文件，一般是"),s("code",[a._v("xz")]),a._v("文件。")]),a._v(" "),s("li",[a._v("TAGS:更新所有的目标，以备完整编译使用。")]),a._v(" "),s("li",[a._v("check 和 test，测试用。")])]),a._v(" "),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("-n")]),a._v("打印不执行。")]),a._v(" "),s("li",[s("code",[a._v("-B")]),a._v(" 重编译所有目标。")]),a._v(" "),s("li",[s("code",[a._v("-C")]),a._v(" 指定读取 makefile 的目录。如果有多个“-C”参数，make 的解释是后面的路径以前面的作为相对路径，并以最后的目录作为被指定目录。如：“make -C ~hchen/test -C prog”等价于“make -C hchen/test/prog”。")])]),a._v(" "),s("h2",{attrs:{id:"隐含规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐含规则"}},[a._v("#")]),a._v(" 隐含规则")]),a._v(" "),s("p",[a._v("例如，把 .c 文件编译成 .o 文件这一规则，你根本就不用写出来，make 会自动推导出这种规则，并生成我们需要的 .o 文件。")]),a._v(" "),s("p",[a._v("make 调用的隐含规则是，把 .o 的目标的依赖文件置成 .c ，并使用 C 的编译命令 "),s("code",[a._v("cc –c $(CFLAGS) foo.c")]),a._v(" 来生成 foo.o 的目标。")]),a._v(" "),s("p",[a._v("隐含规则一览：")]),a._v(" "),s("ol",[s("li",[a._v("编译 C 程序的隐含规则。"),s("code",[a._v("<n>.o")]),a._v(" 的目标的依赖目标会自动推导为 "),s("code",[a._v("<n>.c")]),a._v(" ，并且其生成命令是 "),s("code",[a._v("$(CC) –c $(CPPFLAGS) $(CFLAGS)")])]),a._v(" "),s("li",[a._v("编译 C++ 程序的隐含规则。"),s("code",[a._v("<n>.o")]),a._v(" 的目标的依赖目标会自动推导为 "),s("code",[a._v("<n>.cc")]),a._v(" 或是 "),s("code",[a._v("<n>.C")]),a._v(" ，并且其生成命令是 "),s("code",[a._v("$(CXX) –c $(CPPFLAGS) $(CXXFLAGS)")]),a._v(" 。（建议使用 .cc 作为 C++ 源文件的后缀，而不是 .C ）")])]),a._v(" "),s("h3",{attrs:{id:"命令变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令变量"}},[a._v("#")]),a._v(" 命令变量")]),a._v(" "),s("ul",[s("li",[a._v("AR : 函数库打包程序。默认命令是 ar")]),a._v(" "),s("li",[a._v("AS : 汇编语言编译程序。默认命令是 as")]),a._v(" "),s("li",[a._v("CC : C 语言编译程序。默认命令是 cc")]),a._v(" "),s("li",[a._v("CXX : C++ 语言编译程序。默认命令是 g++")]),a._v(" "),s("li",[a._v("CO : 从 RCS 文件中扩展文件程序。默认命令是 co")]),a._v(" "),s("li",[a._v("CPP : C 程序的预处理器（输出是标准输出设备）。默认命令是 $(CC) –E")]),a._v(" "),s("li",[a._v("FC : Fortran 和 Ratfor 的编译器和预处理程序。默认命令是 f77")]),a._v(" "),s("li",[a._v("GET : 从 SCCS 文件中扩展文件的程序。默认命令是 get")]),a._v(" "),s("li",[a._v("LEX : Lex 方法分析器程序（针对于 C 或 Ratfor）。默认命令是 lex")]),a._v(" "),s("li",[a._v("PC : Pascal 语言编译程序。默认命令是 pc")]),a._v(" "),s("li",[a._v("YACC : Yacc 文法分析器（针对于 C 程序）。默认命令是 yacc")]),a._v(" "),s("li",[a._v("YACCR : Yacc 文法分析器（针对于 Ratfor 程序）。默认命令是 yacc –r")]),a._v(" "),s("li",[a._v("MAKEINFO : 转换 Texinfo 源文件（.texi）到 Info 文件程序。默认命令是 makeinfo")]),a._v(" "),s("li",[a._v("TEX : 从 TeX 源文件创建 TeX DVI 文件的程序。默认命令是 tex")]),a._v(" "),s("li",[a._v("TEXI2DVI : 从 Texinfo 源文件创建军 TeX DVI 文件的程序。默认命令是 texi2dvi")]),a._v(" "),s("li",[a._v("WEAVE : 转换 Web 到 TeX 的程序。默认命令是 weave")]),a._v(" "),s("li",[a._v("CWEAVE : 转换 C Web 到 TeX 的程序。默认命令是 cweave")]),a._v(" "),s("li",[a._v("TANGLE : 转换 Web 到 Pascal 语言的程序。默认命令是 tangle")]),a._v(" "),s("li",[a._v("CTANGLE : 转换 C Web 到 C。默认命令是 ctangle")]),a._v(" "),s("li",[a._v("RM : 删除文件命令。默认命令是 rm –f")])]),a._v(" "),s("h3",{attrs:{id:"命令参数的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令参数的变量"}},[a._v("#")]),a._v(" 命令参数的变量")]),a._v(" "),s("ul",[s("li",[a._v("ARFLAGS : 函数库打包程序 AR 命令的参数。默认值是 rv")]),a._v(" "),s("li",[a._v("ASFLAGS : 汇编语言编译器参数。（当明显地调用 .s 或 .S 文件时）")]),a._v(" "),s("li",[a._v("CFLAGS : C 语言编译器参数。")]),a._v(" "),s("li",[a._v("CXXFLAGS : C++ 语言编译器参数。")]),a._v(" "),s("li",[a._v("COFLAGS : RCS 命令参数。")]),a._v(" "),s("li",[a._v("CPPFLAGS : C 预处理器参数。（C 和 Fortran 编译器也会用到）。")]),a._v(" "),s("li",[a._v("FFLAGS : Fortran 语言编译器参数。")]),a._v(" "),s("li",[a._v("GFLAGS : SCCS “get”程序参数。")]),a._v(" "),s("li",[a._v("LDFLAGS : 链接器参数。（如：ld ）")]),a._v(" "),s("li",[a._v("LFLAGS : Lex 文法分析器参数。")]),a._v(" "),s("li",[a._v("PFLAGS : Pascal 语言编译器参数。")]),a._v(" "),s("li",[a._v("RFLAGS : Ratfor 程序的 Fortran 编译器参数。")]),a._v(" "),s("li",[a._v("YFLAGS : Yacc 文法分析器参数。")])]),a._v(" "),s("h3",{attrs:{id:"自动化变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动化变量"}},[a._v("#")]),a._v(" 自动化变量")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("$@")]),a._v(" : 表示规则中的目标文件集。在模式规则中，如果有多个目标，那么，$@ 就是匹配于目标中模式定义的集合。")]),a._v(" "),s("li",[s("code",[a._v("$%")]),a._v(" : 仅当目标是函数库文件中，表示规则中的目标成员名。例如，如果一个目标是 foo.a(bar.o)- 那么，"),s("code",[a._v("$%")]),a._v(" 就是 bar.o ，$@ 就是 foo.a 。如果目标不是函数库文件（Unix 下是 .a ，Windows下是 .lib ），那么，其值为空。")]),a._v(" "),s("li",[s("code",[a._v("$<")]),a._v(" : 依赖目标中的第一个目标名字。如果依赖目标是以模式（即 % ）定义的，那么 $< 将是符合模式的一系列的文件集。注意，其是一个一个取出来的。")]),a._v(" "),s("li",[s("code",[a._v("$?")]),a._v(" : 所有比目标新的依赖目标的集合。以空格分隔。")]),a._v(" "),s("li",[s("code",[a._v("$^")]),a._v(" : 所有的依赖目标的集合。以空格分隔。如果在依赖目标中有多个重复的，那么这个变量会去除重复的依赖目标，只保留一份。")]),a._v(" "),s("li",[s("code",[a._v("$+")]),a._v(" : 这个变量很像 $^ ，也是所有依赖目标的集合。只是它不去除重复的依赖目标。")]),a._v(" "),s("li",[s("code",[a._v("$*")]),a._v(" : 这个变量表示目标模式中 % 及其之前的部分。如果目标是 dir/a.foo.b ，并且目标的模式是a.%.b ，那么，$* 的值就是 dir/foo 。这个变量对于构造有关联的文件名是比较有效。如果目标中没有模式的定义，那么 $* 也就不能被推导出，但是，如果目标文件的后缀是 make 所识别的，那么 $* 就是除了后缀的那一部分。例如：如果目标是 foo.c ，因为 .c 是 make 所能识别的后缀名，所以，$* 的值就是 foo 。这个特性是 GNU make 的，很有可能不兼容于其它版本的 make，所以，你应该尽量避免使用 $* ，除非是在隐含规则或是静态模式中。如果目标中的后缀是 make 所不能识别的，那么 $* 就是空值。")])]),a._v(" "),s("p",[a._v("打包：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("lib")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" foo.o bar.o lose.o win.o\n    ar r lib "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$?")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("四个变量（"),s("code",[a._v("$@")]),a._v(" 、"),s("code",[a._v("$<")]),a._v(" 、"),s("code",[a._v("$%")]),a._v(" 、"),s("code",[a._v("$*")]),a._v(" ）在扩展时只会有一个文件，另外三个是文件列表。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("$(@D)")]),a._v("表示 $@ 的目录部分（不以斜杠作为结尾），如果 $@ 值是 dir/foo.o ，那么 $(@D) 就是 dir ，而如果 $@ 中没有包含斜杠的话，其值就是 . （当前目录）。")]),a._v(" "),s("li",[s("code",[a._v("$(@F)")]),a._v("表示 $@ 的文件部分，如果 $@ 值是 dir/foo.o ，那么 $(@F) 就是 foo.o ，$(@F) 相当于函数$(notdir $@) 。")]),a._v(" "),s("li",[s("code",[a._v("$(*D)")]),a._v(", "),s("code",[a._v("$(*F)")]),a._v("和上面所述的同理，也是取文件的目录部分和文件部分。对于上面的那个例子，"),s("code",[a._v("$(*D)")]),a._v(" 返回 "),s("code",[a._v("dir")]),a._v(" ，而 "),s("code",[a._v("$(*F)")]),a._v(" 返回 foo")]),a._v(" "),s("li",[s("code",[a._v("$(%D)")]),a._v(", $(%F)分别表示了函数包文件成员的目录部分和文件部分。这对于形同 archive(member) 形式的目标中的 member 中包含了不同的目录很有用。")]),a._v(" "),s("li",[s("code",[a._v("$(<D)")]),a._v(", "),s("code",[a._v("$(<F)")]),a._v("分别表示依赖文件的目录部分和文件部分。")]),a._v(" "),s("li",[s("code",[a._v("$(^D)")]),a._v(", $(^F)分别表示所有依赖文件的目录部分和文件部分。（无相同的）")]),a._v(" "),s("li",[s("code",[a._v("$(+D)")]),a._v(", $(+F)分别表示所有依赖文件的目录部分和文件部分。（可以有相同的）")]),a._v(" "),s("li",[s("code",[a._v("$(?D)")]),a._v(", $(?F)分别表示被更新的依赖文件的目录部分和文件部分。")])]),a._v(" "),s("p",[a._v("最后想提醒一下的是，对于 "),s("code",[a._v("$<")]),a._v(" ，为了避免产生不必要的麻烦，我们最好给 $ 后面的那个特定字符\n都加上圆括号，比如，"),s("code",[a._v("$(<)")]),a._v(" 就要比 "),s("code",[a._v("$<")]),a._v(" 要好一些。")]),a._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://seisman.github.io/how-to-write-makefile/rules.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("陈皓-跟我一起写 Makefile"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("strong",[a._v("自动生成依赖关系")])]),a._v(" "),s("p",[s("code",[a._v("foreach")]),a._v(" 函数。")]),a._v(" "),s("p",[s("code",[a._v("filter")]),a._v(" 函数")]),a._v(" "),s("p",[s("code",[a._v("filter-out")]),a._v(" 函数。")]),a._v(" "),s("p",[s("code",[a._v("ifneq")])]),a._v(" "),s("p",[a._v("通过命令自动生成对头文件的依赖，将生成的依赖自动包含进 Makefile 中，\n头文件改动后，自动确认需要重新编译的文件。")]),a._v(" "),s("p",[a._v("gcc -M des 获取 des 的完整依赖关系")]),a._v(" "),s("p",[a._v("gcc -MM des 获取目标des 的部分依赖关系(-E 仅对依赖关系做初步解析)")]),a._v(" "),s("p",[a._v("gcc -MM 命令可以自动生成源文件对头文件的依赖关系，且剔除掉库里面的头文件")]),a._v(" "),s("p",[a._v("makefile 中的 include 关键字")]),a._v(" "),s("p",[a._v("类似 C 中的 include，将其他文件的内容原封不动的搬入当前文件")]),a._v(" "),s("p",[a._v("include 是按次序来载入文件,最先载入的 .d 文件中的目标会成为默认目标。")]),a._v(" "),s("p",[a._v("GNU Make手册建议使用正则表达式显式创建依赖文件")]),a._v(" "),s("p",[a._v("GNU make 官方手册建议写法：")]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" main.o stack.o maze.o\n\tgcc "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$^")]),a._v(" -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\t-rm main *.o\n\n"),s("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" clean\n\nsources "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" main.c stack.c maze.c\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("-include "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),a._v("(sources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(".c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(".d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" %.c\n\tset -e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" rm -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@;")]),a._v(" \\\n\t"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" -MM "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("CPPFLAGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v(" > "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$;")]),a._v(" \\\n\tsed "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s,\\($*\\)\\.o[ :]*,\\1.o $@ : ,g'")]),a._v(" < "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$")]),a._v(" > "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@;")]),a._v(" \\\n\trm -f "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.$$$$")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    rm -rf "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("TARGET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" *.o *.d *.d.*\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br")])]),s("p",[s("a",{attrs:{href:"https://akaedu.github.io/book/ch22s04.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("自动处理头文件的依赖关系"),s("OutboundLink")],1),a._v(" "),s("a",{attrs:{href:"https://blog.csdn.net/qq_39366020/article/details/106687558",target:"_blank",rel:"noopener noreferrer"}},[a._v("Makefile-自动生成依赖-示例分析"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-makefile line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-makefile"}},[s("code",[a._v("objs "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" Hello.o Fun.o\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("Hello")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("objs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ngcc -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$^")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#判断是否存在依赖文件")]),a._v("\ndep_files "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("foreach")]),a._v(" f, "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("objs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(", ."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ndep_files "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wildcard")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("dep_files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#包含依赖文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ifneq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("dep_files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(","),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("include")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("dep_files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("endif")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("%.o")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("%.c\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#编译.c文件，并且把依赖的文件写入.$@.d")]),a._v("\n    gcc -Wp,-MD,."),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@.d")]),a._v(" -c -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$<")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token target symbol"}},[a._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    rm -rf *.o Hello\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#增加伪目标")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin-target builtin"}},[a._v(".PHONY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" clean\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("h2",{attrs:{id:"自动以最大线程编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动以最大线程编译"}},[a._v("#")]),a._v(" 自动以最大线程编译")]),a._v(" "),s("p",[s("code",[a._v("sudo make -j $(nproc)")])])])}),[],!1,null,null,null);s.default=n.exports}}]);