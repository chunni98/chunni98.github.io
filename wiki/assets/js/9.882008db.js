(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{283:function(e,s,t){"use strict";t.r(s);var a=t(14),_=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"_2-1-回车和换行有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-回车和换行有什么区别"}},[e._v("#")]),e._v(" 2.1 回车和换行有什么区别？")]),e._v(" "),t("p",[e._v("回车"),t("code",[e._v("\\r")]),e._v("本义是光标重新回到本行开头，r的英文return，控制字符可以写成"),t("code",[e._v("CR")]),e._v("，即"),t("code",[e._v("Carriage Return")]),e._v("(回车，carriage有“马车”的意思)。")]),e._v(" "),t("p",[e._v("换行"),t("code",[e._v("\\n")]),e._v("本义是光标往下一行（不一定到下一行行首，不同操作系统中有差异），"),t("code",[e._v("n")]),e._v("的英文"),t("code",[e._v("newline")]),e._v("，控制字符可以写成"),t("code",[e._v("LF")]),e._v("，即"),t("code",[e._v("Line Feed")]),e._v("(换行)。")]),e._v(" "),t("h2",{attrs:{id:"_2-2-空洞文件是什么-有什么用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-空洞文件是什么-有什么用"}},[e._v("#")]),e._v(" 2.2 空洞文件是什么？有什么用?")]),e._v(" "),t("p",[e._v("“在UNIX文件操作中，文件位移量可以大于文件的当前长度，在这种情况下，对该文件的下一次写将延长该文件，并在文件中构成一个空洞，这一点是允许的。位于文件中但没有写过的字节都被设为 0。”      --摘自“百度百科”")]),e._v(" "),t("p",[e._v("从上面的描述可以将空洞文件的特点表述为："),t("code",[e._v("offset")]),e._v(" > 实际文件大小。")]),e._v(" "),t("p",[e._v("空洞文件特点就是offset大于实际大小，也就是说一个文件的两头有数据而中间为空，以"),t("code",[e._v("\\0")]),e._v("填充。")]),e._v(" "),t("p",[e._v("空洞文件作用很大，例如迅雷下载文件，在未下载完成时就已经占据了全部文件大小的空间，这时候就是空洞文件。下载时如果没有空洞文件，多线程下载时文件就都只能从一个地方写入，这就不是多线程了。如果有了空洞文件，可以从不同的地址写入，就完成了多线程的优势任务。")]),e._v(" "),t("h2",{attrs:{id:"_2-3-路由器和网关的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-路由器和网关的区别"}},[e._v("#")]),e._v(" 2.3 路由器和网关的区别")]),e._v(" "),t("p",[e._v("网关是一个概念，路由器是一个产品。")]),e._v(" "),t("p",[e._v("路由器是一个网关，但网关不一定是路由器，网关的作用就是帮助两个不能直接互通的网络，进行数据转发的。")]),e._v(" "),t("p",[e._v("路由器可以做网关，把家庭局域网和互联网相连。")]),e._v(" "),t("p",[e._v("默认网关事实上不是一个产品而是一个网络层的概念，PC本身不具备路由寻址能力，所以PC要把所有的IP包发送到一个默认的中转地址上面进行转发，也就是默认网关。这个网关可以在路由器上，可以在三层交换机上，可以在防火墙上，可以在服务器上，所以和物理的设备无关。")]),e._v(" "),t("h2",{attrs:{id:"_2-4-为什么-ip-地址通常以-192-168-开头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-为什么-ip-地址通常以-192-168-开头"}},[e._v("#")]),e._v(" 2.4 为什么 ip 地址通常以 192.168 开头？")]),e._v(" "),t("p",[e._v("家庭网络由于网络规模比较小，通常使用了192.168开头的私网地址，光猫拨号获取了一个公网地址（或者运营商私网地址），通过NAT方式的映射到这个公网地址的不同端口，访问互联网。")]),e._v(" "),t("h2",{attrs:{id:"_2-5-gcc-怎么指定链接的库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-gcc-怎么指定链接的库"}},[e._v("#")]),e._v(" 2.5 gcc 怎么指定链接的库？")]),e._v(" "),t("p",[e._v("链接指定的库：")]),e._v(" "),t("p",[t("code",[e._v("-l:libxxx.a")]),e._v(" 或 "),t("code",[e._v("-l:libxxx.so.xxx")])]),e._v(" "),t("h2",{attrs:{id:"_2-7-the-following-packages-have-been-kept-back"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-the-following-packages-have-been-kept-back"}},[e._v("#")]),e._v(" 2.7 The following packages have been kept back")]),e._v(" "),t("p",[e._v("如果对已安装的某个软件包的依赖关系发生了更改，因此必须安装新的软件包才能执行升级，则该软件包将列为“保留”。")]),e._v(" "),t("p",[e._v("运行命令 "),t("code",[e._v("apt-get install <list of packages kept back>")]),e._v(" 即可。")]),e._v(" "),t("h2",{attrs:{id:"_2-8-ubuntu-server-开机停顿两分钟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-ubuntu-server-开机停顿两分钟"}},[e._v("#")]),e._v(" 2.8 ubuntu server 开机停顿两分钟")]),e._v(" "),t("p",[e._v("会出现提醒："),t("code",[e._v("A start job is running for wait for Network to be configured")]),e._v("。")]),e._v(" "),t("p",[e._v("然后2分钟超时才能继续启动。")]),e._v(" "),t("p",[e._v("比较简单的方法是减少超时时间：")]),e._v(" "),t("p",[t("code",[e._v("vim /etc/systemd/system/network-online.target.wants/systemd-networkd-wait-online.service")]),e._v("\n然后在 [service] 后添加一行 "),t("code",[e._v("TimeoutStartSec=2sec")])]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("oneshot\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/lib/systemd/systemd-networkd-wait-online\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("RemainAfterExit")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("yes\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("TimeoutStartSec")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("2sec\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 增加这一行")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("这样超时就只会卡住两秒钟而不是两分钟了。")]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://skyao.io/learning-ubuntu-server/docs/installation/basic/network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置网络"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"_2-9-我更换-shell-为-zsh-shell-脚本开头的-bin-sh-需要更改为-bin-zsh-吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-我更换-shell-为-zsh-shell-脚本开头的-bin-sh-需要更改为-bin-zsh-吗"}},[e._v("#")]),e._v(" 2.9 我更换 shell 为 zsh ，shell 脚本开头的 #! /bin/sh 需要更改为 #! /bin/zsh 吗？")]),e._v(" "),t("p",[e._v('是的，如果你将默认的shell更改为zsh，并且你希望使用zsh来解释执行你的shell脚本，那么你需要将脚本文件的开头的shebang（也称为"hashbang"）从#!/bin/sh更改为#!/bin/zsh。')]),e._v(" "),t("p",[e._v("Shebang是一个特殊的注释，它告诉系统应该使用哪个解释器来执行脚本。在默认情况下，#!/bin/sh告诉系统使用/bin/sh解释器来执行脚本。当你将默认shell更改为zsh后，如果你想要使用zsh来解释执行脚本，那么你需要相应地更新shebang为#!/bin/zsh。")]),e._v(" "),t("p",[e._v("这样做确保了当你运行脚本时，系统将使用正确的解释器来执行它。否则，如果shebang与实际使用的shell不匹配，可能会导致脚本无法正常执行。")]),e._v(" "),t("h2",{attrs:{id:"_2-10-uclinux-和-linux-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-uclinux-和-linux-的区别"}},[e._v("#")]),e._v(" 2.10 ucLinux 和 linux 的区别？")]),e._v(" "),t("p",[e._v("一、名字含义：")]),e._v(" "),t("p",[e._v('在uClinux这个英文单词中u表示Micro，小的意思，C表示Control，控制的意思， 所以uClinux就是Micro-Control-Linux，字面上的理解就是"针对微控制领域而设计的Linux系统"。')]),e._v(" "),t("p",[e._v("二、ucLinux与linux区别？")]),e._v(" "),t("ul",[t("li",[e._v("没有虚存管理")]),e._v(" "),t("li",[e._v("不能运行时增加进程栈")]),e._v(" "),t("li",[e._v("不支持分页")]),e._v(" "),t("li",[e._v("可执行程序不是elf,   而是flat")]),e._v(" "),t("li",[e._v("不能用fork,   而是用vfork")]),e._v(" "),t("li",[e._v("RAMDISK")]),e._v(" "),t("li",[e._v("uClinux是针对控制领域的嵌入式linux操作系统，它从Linux 2.0/2.4内核派生而来，沿袭了主流Linux的绝大部分特性。适合不具备内存管理单元(MMU)的微处理器/微控制器。没有MMU支持是 uClinux与主流Linux的基本差异。")])]),e._v(" "),t("p",[e._v("对uCLinux 来说，其设计针对没有MMU的处理器，不能使用处理器的虚拟内存管理技术。uCLinux仍然采用存储器的分页管理，系统在启动时把实际存储器进行分页。 在加载应用程序时程序分页加载。但是由于没有MMU管理，所以实际上uCLinux采用实存储器管理策略。uCLinux系统对于内存的访问是直接的，所 有程序中访问的地址都是实际的物理地址。操作系统对内存空间没有保护，各个进程实际上共享一个运行空间。一个进程在执行前，系统必须为进程分配足够的连续 地址空间，然后全部载入主存储器的连续空间中。")])])}),[],!1,null,null,null);s.default=_.exports}}]);